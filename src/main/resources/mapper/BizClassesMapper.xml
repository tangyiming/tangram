<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tangym.tangram.mapper.BizClassesMapper">

    <resultMap id="BaseResultMap" type="com.tangym.tangram.entity.BizClasses">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="bizId" column="biz_id" jdbcType="INTEGER"/>
            <result property="clzFullName" column="clz_full_name" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="componentId" column="component_id" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,biz_id,clz_full_name,
        create_time,update_time,component_id
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from biz_classes
        where  id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from biz_classes
        where  id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.tangym.tangram.entity.BizClasses" useGeneratedKeys="true">
        insert into biz_classes
        ( id,biz_id,clz_full_name
        ,create_time,update_time,component_id
        )
        values (#{id,jdbcType=INTEGER},#{bizId,jdbcType=INTEGER},#{clzFullName,jdbcType=VARCHAR}
        ,#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP},#{componentId,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tangym.tangram.entity.BizClasses" useGeneratedKeys="true">
        insert into biz_classes
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="bizId != null">biz_id,</if>
                <if test="clzFullName != null">clz_full_name,</if>
                <if test="createTime != null">create_time,</if>
                <if test="updateTime != null">update_time,</if>
                <if test="componentId != null">component_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="bizId != null">#{bizId,jdbcType=INTEGER},</if>
                <if test="clzFullName != null">#{clzFullName,jdbcType=VARCHAR},</if>
                <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
                <if test="updateTime != null">#{updateTime,jdbcType=TIMESTAMP},</if>
                <if test="componentId != null">#{componentId,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tangym.tangram.entity.BizClasses">
        update biz_classes
        <set>
                <if test="bizId != null">
                    biz_id = #{bizId,jdbcType=INTEGER},
                </if>
                <if test="clzFullName != null">
                    clz_full_name = #{clzFullName,jdbcType=VARCHAR},
                </if>
                <if test="createTime != null">
                    create_time = #{createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updateTime != null">
                    update_time = #{updateTime,jdbcType=TIMESTAMP},
                </if>
                <if test="componentId != null">
                    component_id = #{componentId,jdbcType=INTEGER},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tangym.tangram.entity.BizClasses">
        update biz_classes
        set
            biz_id =  #{bizId,jdbcType=INTEGER},
            clz_full_name =  #{clzFullName,jdbcType=VARCHAR},
            create_time =  #{createTime,jdbcType=TIMESTAMP},
            update_time =  #{updateTime,jdbcType=TIMESTAMP},
            component_id =  #{componentId,jdbcType=INTEGER}
        where  id = #{id,jdbcType=INTEGER}
    </update>
</mapper>
